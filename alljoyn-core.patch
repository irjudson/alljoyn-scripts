From f3dcb9430da6d4ee44b03c868af6162274b6300d Mon Sep 17 00:00:00 2001
From: "Ivan R. Judson" <irjudson@gmail.com>
Date: Sat, 25 Oct 2014 08:07:52 -0700
Subject: [PATCH] Compiling for windows

---
 build_core/SConscript            |  2 +-
 common/inc/qcc/windows/mapping.h | 32 ++++++++++++++++++++++----------
 2 files changed, 23 insertions(+), 11 deletions(-)

diff --git a/build_core/SConscript b/build_core/SConscript
index 50ad2a3..71cc657 100644
--- a/build_core/SConscript
+++ b/build_core/SConscript
@@ -68,7 +68,7 @@ vars.Add(EnumVariable('NDEBUG', 'Override NDEBUG default for release variant', '
 
 
 if default_msvc_version:
-    vars.Add(EnumVariable('MSVC_VERSION', 'MSVC compiler version - Windows', default_msvc_version, allowed_values=('9.0', '10.0', '11.0', '11.0Exp')))
+    vars.Add(EnumVariable('MSVC_VERSION', 'MSVC compiler version - Windows', default_msvc_version, allowed_values=('9.0', '10.0', '11.0', '11.0Exp', '12.0', '12.0Exp')))
 
 
 # Standard variant directories
diff --git a/common/inc/qcc/windows/mapping.h b/common/inc/qcc/windows/mapping.h
index 1dc6be9..8f16f3a 100644
--- a/common/inc/qcc/windows/mapping.h
+++ b/common/inc/qcc/windows/mapping.h
@@ -24,6 +24,14 @@
 
 #include <windows.h>
 #include <float.h>
+
+#if _MSC_VER >= 1800
+	#ifdef __cplusplus
+		#include<algorithm>
+	#else
+		#include<minmax.h>
+	#endif
+#endif
 /// @cond ALLJOYN_DEV
 /**
  * Map snprintf to _snprintf
@@ -57,16 +65,20 @@
  * strcasecmp(const char *s1, const char *s2) will compile in windows.
  */
 #define strcasecmp _stricmp
-/**
- * Map fpclassify to _fpclass
- *
- * fpclassify does not properly map in windows this is needed to insure calls to
- * fpclassify(x) will compile in Windows.
- */
-#define fpclassify _fpclass
 
-#define FP_NAN (_FPCLASS_SNAN | _FPCLASS_QNAN)
-#define FP_ZERO (_FPCLASS_NZ | _FPCLASS_PZ)
-#define FP_INFINITE (_FPCLASS_NINF | _FPCLASS_PINF)
+#if !defined(_MSC_VER) || _MSC_VER < 1800
+	/**
+	 * Map fpclassify to _fpclass
+	 *
+	 * fpclassify does not properly map in windows this is needed to insure calls to
+	 * fpclassify(x) will compile in Windows.
+	 */
+	#define fpclassify _fpclass
+
+	#define FP_NAN (_FPCLASS_SNAN | _FPCLASS_QNAN)
+	#define FP_ZERO (_FPCLASS_NZ | _FPCLASS_PZ)
+	#define FP_INFINITE (_FPCLASS_NINF | _FPCLASS_PINF)
+#endif
+
 /// @endcond
 #endif
-- 
1.9.4.msysgit.2

